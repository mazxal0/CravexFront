// FirstPage.jsx
'use client';

import { motion } from 'framer-motion';
import dynamic from 'next/dynamic';
import React, { useCallback, useState } from 'react';
import Particles from 'react-tsparticles';
import { loadFull } from 'tsparticles';

// UI components
import styles from './page.module.scss';

import animationData from '@/../public/crypto-hero.json';
import { Button } from '@/components/ui/Button/Button';

const Lottie = dynamic(() => import('react-lottie-player'), { ssr: false });

// Animations
const fadeIn = (delay = 0) => ({
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.6, delay } },
});
const stagger = {
  hidden: {},
  visible: { transition: { staggerChildren: 0.15 } },
};

// Example data
const features = [
  {
    title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    desc: '–ì–ª—É–±–æ–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –∞–∫—Ç–∏–≤–æ–≤',
    icon: 'üìä',
  },
  { title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', desc: '–í–∞—à–∏ –∫–ª—é—á–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —É –≤–∞—Å', icon: 'üîí' },
  {
    title: '–ú—É–ª—å—Ç–∏-—Å–µ—Ç—å',
    desc: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Ethereum, Solana, TON –∏ –¥—Ä—É–≥–∏—Ö',
    icon: 'üîó',
  },
];
const networks = ['Ethereum', 'Solana', 'BNB Smart Chain', 'TON'];

export default function FirstPage() {
  const [selectedNetwork, setSelectedNetwork] = useState(networks[0]);

  const particlesInit = useCallback(async (engine: any) => {
    await loadFull(engine);
  }, []);

  const particlesOptions = {
    particles: {
      number: { value: 50 },
      color: { value: '#FF9360' },
      move: { enable: true, speed: 0.5, outModes: { default: 'bounce' } },
      links: { enable: true, color: '#3B82F6', distance: 120 },
    },
    interactivity: { events: { onHover: { enable: true, mode: 'repulse' } } },
  } as const;

  return (
    <div className={styles.root}>
      <Particles
        init={particlesInit}
        options={particlesOptions}
        className={styles.particles}
      />

      <header className={styles.header}>
        <div className={styles.logo}>CraveX</div>
        <nav className={styles.nav}></nav>
      </header>

      <motion.section
        className={styles.hero}
        initial="hidden"
        animate="visible"
        variants={stagger}
      >
        <motion.div className={styles.heroText} variants={fadeIn(0.2)}>
          <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CraveX Hub</h1>
          <p>–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä DeFi-–∞–∫—Ç–∏–≤–æ–≤ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏</p>
          <div className={styles.heroActions}>
            <Button formatType={'primary'} formatSize="lg">
              –ù–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å
            </Button>
            <Button formatType="outline" formatSize="lg">
              –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
            </Button>
          </div>
        </motion.div>
        <motion.div className={styles.heroAnim} variants={fadeIn(0.4)}>
          <Lottie
            loop
            animationData={animationData}
            play
            style={{ width: 280, height: 280 }}
          />
        </motion.div>
      </motion.section>

      <motion.section
        className={styles.features}
        initial="hidden"
        animate="visible"
        variants={stagger}
      >
        <h2 className={styles.sectionTitle}>–ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
        <div className={styles.featureGrid}>
          {features.map((f, i) => (
            <motion.div
              key={i}
              className={styles.featureCard}
              variants={fadeIn(i * 0.2)}
            >
              <div className={styles.featureIcon}>{f.icon}</div>
              <h3>{f.title}</h3>
              <p>{f.desc}</p>
            </motion.div>
          ))}
        </div>
      </motion.section>

      <section className={styles.networkSelector}>
        <h2>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å</h2>
        {/*<SearchableSelect*/}
        {/*  options={networks}*/}
        {/*  value={selectedNetwork}*/}
        {/*  onChange={setSelectedNetwork}*/}
        {/*  placeholder="–ü–æ–∏—Å–∫ —Å–µ—Ç–∏..."*/}
        {/*/>*/}
      </section>

      <motion.section
        className={styles.learn}
        initial="hidden"
        animate="visible"
        variants={fadeIn(0.2)}
      >
        <h2>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h2>
        <ul>
          <li>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à –∫–æ—à–µ–ª—ë–∫</li>
          <li>–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</li>
          <li>–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏</li>
        </ul>
      </motion.section>

      <motion.section
        className={styles.cta}
        initial="hidden"
        animate="visible"
        variants={fadeIn(0.3)}
      >
        <h2>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</h2>
        <Button formatType="primary" formatSize="lg">
          –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–µ—Ç–∞
        </Button>
      </motion.section>

      <footer className={styles.footer}>
        <span>¬© 2025 CraveX. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</span>
      </footer>
    </div>
  );
}
